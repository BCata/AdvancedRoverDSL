/*
 * generated by Xtext 2.15.0
 */
package mars.rover.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import mars.rover.dSL.Mission

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DSLGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val root = resource.allContents.head as Mission;
		if (root !== null) {
			var mainPath = "generated/" + '/'
			fsa.generateFile(mainPath + 'AdvancedRover.py', CodeGenerator.toMainCode(root))
			
			var secondaryPath = "generated/" + '/'
			fsa.generateFile(secondaryPath + 'AdvancedRoverSecondary.py', CodeGenerator.toSecondaryCode(root))
			
			var apiPath = "generated/api" + '/'
			fsa.generateFile(apiPath + 'arm_movement.py', CodeGenerator.toAPI_armMovement())
			fsa.generateFile(apiPath + 'celebration.py', CodeGenerator.toAPI_celebration())
			fsa.generateFile(apiPath + 'color.py', CodeGenerator.toAPI_color())
			fsa.generateFile(apiPath + 'measurements.py', CodeGenerator.toAPI_measurements())
			fsa.generateFile(apiPath + 'mission_report.py', CodeGenerator.toAPI_missionReport())
			fsa.generateFile(apiPath + 'parking.py', CodeGenerator.toAPI_parking())
			fsa.generateFile(apiPath + 'rover_bluetooth.py', CodeGenerator.toAPI_roverBluetooth())
			fsa.generateFile(apiPath + 'touch.py', CodeGenerator.toAPI_touch())
			fsa.generateFile(apiPath + 'ultrasonic.py', CodeGenerator.toAPI_ultrasonic())
			fsa.generateFile(apiPath + 'wheel_movement.py', CodeGenerator.toAPI_wheelMovement())
			
		}
	}
}
